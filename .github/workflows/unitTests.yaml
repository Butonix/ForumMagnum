name: Run Unit Tests
on:
  push:
  pull_request:
    branches-ignore:
      - ea-deploy
  workflow_dispatch:
env:
  BROWSERSLIST_IGNORE_OLD_DATA: 1
jobs:
  runLint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Environment
      uses: ./.github/actions/setupEnvironment
    - run: yarn run eslint

  runTypecheck:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Environment
      uses: ./.github/actions/setupEnvironment
    - run: yarn run tsc

  runUnitTests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Environment
      uses: ./.github/actions/setupEnvironment
    - run: yarn run unit-ci
    - name: Upload coverage report
      uses: actions/upload-artifact@v2
      with:
        name: unit-coverage
        path: unit-coverage

  runIntegrationTests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: ankane/pgvector
        env:
          POSTGRES_DB: unittest_jest_template
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
    env:
      PG_URL: postgres://postgres:postgres@localhost:5432/postgres
      NODE_OPTIONS: "--max_old_space_size=4096"
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Environment
      uses: ./.github/actions/setupEnvironment
    - name: Setup database schema
      run: yarn create-integration-db-ci
    - name: yarn run integration-ci
      run: yarn run integration-ci
    - name: Upload coverage report
      uses: actions/upload-artifact@v2
      with:
        name: integration-coverage
        path: integration-coverage

  runPostgresBootstrap:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: ankane/pgvector
        env:
          POSTGRES_DB: bootstrap_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
    env:
      PG_URL: postgres://postgres:postgres@localhost:5432/bootstrap_db
      SETTINGS_FILE: ./settings-test.json
      NODE_OPTIONS: "--max_old_space_size=4096"
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Environment
      uses: ./.github/actions/setupEnvironment
    - name: Execute Accepted Schema
      run: psql $PG_URL -f ./schema/accepted_schema.sql
    - name: Run Database Bootstrap
      run: yarn migrate up

  mergeCoverageReports:
    needs: [runUnitTests, runIntegrationTests]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Environment
      uses: ./.github/actions/setupEnvironment
    - name: Download all coverage reports
      uses: actions/download-artifact@v2
      with:
        path: .
    - name: Merge coverage reports
      run: yarn combine-coverage
    - name: Coveralls
      uses: coverallsapp/github-action@v2
      with:
        file: combined-coverage
