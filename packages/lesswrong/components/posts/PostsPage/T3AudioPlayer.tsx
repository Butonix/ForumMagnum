import React, { useRef } from 'react';
import { registerComponent } from '../../../lib/vulcan-lib';
import { useTracking } from "../../../lib/analyticsEvents";
import classNames from 'classnames';
import { useEventListener } from '../../hooks/useEventListener';
import { Helmet } from '../../../lib/utils/componentsWithChildren';
import { isEAForum } from '@/lib/instanceSettings';

const styles = (theme: ThemeType): JssStyles => ({
  embeddedPlayer: {
    marginBottom: "30px"
  },
  hideEmbeddedPlayer: {
    display: "none"
  },
  /*
    Styles for the TYPE III AUDIO player "heading play button" feature.
  */
  /* Heading play button should not be shown on small screens */
  '.t3a-heading-play-button': {
    display: 'none'
  },
  /* Set minimum width at which heading play button should be shown */
  '@media screen and (min-width: 850px)': {
    '.t3a-heading-play-button': {
      display: 'block',
      position: 'absolute',
      top: 0,
      left: 0,
      marginLeft: -34,
      marginRight: 10,
      borderRadius: 9999,
      border: 'none',
      width: '1.5rem',
      height: '1.5rem',
      outline: 'none',
      cursor: 'pointer',
      transform: 'translate(0, 0)',
      zIndex: 10,
  
      /* Colour of the play button */
      backgroundColor: theme.palette.grey[310],
      /* Colour of the play button icon. */
      color: theme.palette.grey[0],
      '&:hover': {
        backgroundColor: theme.palette.grey[700],
      },
      '&:focus': {
        outline: 'none',
      }
    },
    '.t3a-heading-play-icon': {
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      marginLeft: 2,
    },
    /* Refine this to match the dimensions of your heading typeface */
    'h2 .t3a-heading-play-button': { marginTop: 9 },
    'h3 .t3a-heading-play-button': { marginTop: 3 },
  }
});

/* The embedded player for posts with audio auto generated by Type 3. Note: Type 3 apply some
   custom styling on prod so this may look different locally */
export const T3AudioPlayer = ({classes, showEmbeddedPlayer, postId}: {
  showEmbeddedPlayer: boolean,
  classes: ClassesType,
  postId: string
}) => {
  const mouseOverDiv = useRef(false);
  const divRef = useRef<HTMLDivElement | null>(null);
  const { captureEvent } = useTracking(); //it is virtuous to add analytics tracking to new components

  const setMouseOverDiv = (isMouseOver: boolean) => {
    mouseOverDiv.current = isMouseOver;
  };
       
  // (Note: this was copied from PostsPodcastPlayer)
  // Dumb hack to let us figure out when the iframe inside the div was clicked on, as a (fuzzy) proxy for people clicking the play button
  // Inspiration: https://gist.github.com/jaydson/1780598
  // This won't trigger more than once per page load, unless the user clicks outside the div element, which will reset it
  useEventListener('blur', (e) => {
    if (mouseOverDiv.current) {
      captureEvent('clickInsidePodcastPlayer', { postId, playerType: "t3-audio" });
    }
  });

  return <div
      ref={divRef}
      onMouseOver={() => setMouseOverDiv(true)}
      onMouseOut={() => setMouseOverDiv(false)}
    >
      <Helmet>
        <script defer type="module" src="https://embed.type3.audio/player.js" crossOrigin="anonymous"></script>
      </Helmet>
      <div className={classNames(classes.embeddedPlayer, { [classes.hideEmbeddedPlayer]: !showEmbeddedPlayer })} >
         {/* @ts-ignore */}
        {isEAForum ? <type-3-player analytics="custom" sticky="true" header-play-buttons="true" title=""></type-3-player> : <type-3-player analytics="custom"></type-3-player>}
      </div>
    </div>
}

const T3AudioPlayerComponent = registerComponent('T3AudioPlayer', T3AudioPlayer, {styles});

declare global {
  interface ComponentTypes {
    T3AudioPlayer: typeof T3AudioPlayerComponent
  }
}
