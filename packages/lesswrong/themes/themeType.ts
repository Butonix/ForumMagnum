// eslint-disable-next-line no-restricted-imports
import type { Color as MuiColorShades } from '@material-ui/core';
import type { PartialDeep } from 'type-fest'

declare global {
  type BreakpointName = "xs"|"sm"|"md"|"lg"|"xl"|"tiny"
  type ColorString = string;
  
  type ThemeType = {
    breakpoints: {
      down:  (breakpoint: BreakpointName|number)=>string,
      up: (breakpoint: BreakpointName|number)=>string,
      values: Record<BreakpointName,number>,
    },
    spacing: {
      unit: number,
      titleDividerSpacing: number,
    },
    palette: {
      primary: Partial<MuiColorShades> & {
        main: ColorString,
        light: ColorString,
        dark: ColorString,
        contrastText: ColorString
      },
      secondary: Partial<MuiColorShades> & {
        main: ColorString,
        light: ColorString,
        dark: ColorString, //UNUSED
        contrastText: ColorString
      },
      lwTertiary: {
        main: ColorString,
        dark: ColorString
      },
      error: {
        main: ColorString,
        light: ColorString,
        dark: ColorString
        contrastText: ColorString, //UNUSED
      },
      text: {
        primary: ColorString,
        secondary: ColorString
        
        normal: ColorString,
        maxIntensity: ColorString,
        slightlyIntense: ColorString,
        slightlyIntense2: ColorString,
        slightlyDim: ColorString,
        slightlyDim2: ColorString,
        dim: ColorString,
        dim2: ColorString,
        dim3: ColorString,
        dim4: ColorString,
        dim40: ColorString,
        dim45: ColorString,
        dim55: ColorString,
        dim60: ColorString,
        grey: ColorString,
        dim700: ColorString,
        spoilerBlockNotice: ColorString,
        notificationCount: ColorString,
        notificationLabel: ColorString,
        eventType: ColorString,
        tooltipText: ColorString,
        negativeKarmaRed: ColorString,
        moderationGuidelinesEasygoing: ColorString,
        moderationGuidelinesNormEnforcing: ColorString,
        moderationGuidelinesReignOfTerror: ColorString,
        charsAdded: ColorString,
        charsRemoved: ColorString,
        invertedBackgroundText: ColorString,
        error: ColorString,
        error2: ColorString,
        sequenceIsDraft: ColorString,
        sequenceTitlePlaceholder: ColorString,
      },
      linkHover: {
        dim: ColorString,
      },
      link: {
        unmarked: ColorString,
        dim: ColorString,
        dim2: ColorString,
        dim3: ColorString,
        grey800: ColorString,
        tocLink: ColorString,
        tocLinkHighlighted: ColorString,
      },
      icon: {
        normal: ColorString,
        maxIntensity: ColorString,
        slightlyDim: ColorString,
        slightlyDim2: ColorString,
        slightlyDim3: ColorString,
        slightlyDim4: ColorString,
        dim: ColorString,
        dim2: ColorString,
        dim3: ColorString,
        dim4: ColorString,
        dim5: ColorString,
        dim6: ColorString,
        dim600: ColorString,
        dim700: ColorString,
        dim55: ColorString,
        tooltipUserMetric: ColorString,
        loadingDots: ColorString,
        loadingDotsAlternate: ColorString,
        horizRuleDots: ColorString,
        greenCheckmark: ColorString,
        onTooltip: ColorString,
        topAuthor: ColorString,
        
        commentsBubble: {
          commentCount: ColorString,
          noUnread: ColorString,
          newPromoted: ColorString,
        },
      },
      border: {
        normal: string,
        itemSeparatorBottom: string,
        slightlyFaint: string,
        extraFaint: string,
        slightlyIntense: string,
        slightlyIntense2: string,
        slightlyIntense3: string,
        intense: string,
        faint: string,
        grey300: string,
        grey400: string,
        maxIntensity: string,
        tableHeadingDivider: string,
        table: string,
        tableCell: string,
        transparent: string,
        emailHR: string,
        sunshineNewUsersInfoHR: string,
        appBarSubtitleDivider: string,
        commentBorder: string,
        answerBorder: string,
        tooltipHR: string,
      },
      panelBackground: {
        default: ColorString,
        translucent: ColorString,
        translucent2: ColorString,
        hoverHighlightGrey: ColorString,
        postsItemHover: ColorString,
        formErrors: ColorString,
        darken03: ColorString,
        darken05: ColorString,
        darken25: ColorString,
        darken40: ColorString,
        
        adminHomeRecentLogins: ColorString,
        adminHomeAllUsers: ColorString,
        deletedComment: ColorString,
        newCommentFormModerationGuidelines: ColorString,
        commentNodeEven: ColorString,
        commentNodeOdd: ColorString,
        commentModeratorHat: ColorString,
        commentHighlightAnimation: ColorString,
        postsItemExpandedComments: ColorString,
        metaculusBackground: ColorString,
        spoilerBlock: ColorString,
        revealedSpoilerBlock: ColorString,
        tableHeading: ColorString,
        notificationMenuTabBar: ColorString,
        recentDiscussionThread: ColorString,
        tooltipBackground: ColorString,
        tenPercent: ColorString,
        sunshineReportedContent: ColorString,
        sunshineFlaggedUser: ColorString,
        sunshineNewPosts: ColorString,
        sunshineNewComments: ColorString,
        sunshineNewTags: ColorString,
        sunshineWarningHighlight: ColorString,
        mobileNavFooter: ColorString,
        singleLineComment: ColorString,
        singleLineCommentHovered: ColorString,
        singleLineCommentOddHovered: ColorString,
        sequenceImageGradient: string,
      },
      boxShadow: {
        default: string,
        moreFocused: string,
        faint: string,
        
        notificationsDrawer: string,
        appBar: string,
        sequencesGridItemHover: string,
        eventCard: string,
        mozillaHubPreview: string,
        featuredResourcesCard: string,
        spreadsheetPage1: string,
        spreadsheetPage2: string,
        collectionsCardHover: string,
        parentComment: string,
        sunshineSidebarHoverInfo: string,
        sunshineSendMessage: string,
      },
      buttons: {
        hoverGrayHighlight: "rgba(0,0,0,0.05)",
        startReadingButtonBackground: ColorString,
        recentDiscussionSubscribeButtonText: ColorString,
        featuredResourceCTAtext: ColorString,
        primaryDarkText: ColorString,
        feedExpandButton: {
          background: ColorString,
          plusSign: ColorString,
          border: string,
        },
        notificationsBellOpen: {
          background: ColorString,
          icon: ColorString,
        },
      },
      tag: {
        background: ColorString,
        border: string,
        coreTagBorder: string,
        text: ColorString,
        boxShadow: string,
        hollowTagBackground: ColorString,
        addTagButtonBackground: ColorString,
      },
      geosuggest: {
        dropdownBackground: ColorString,
        dropdownActiveBackground: ColorString,
        dropdownActiveText: ColorString,
        dropdownHoveredBackground: ColorString,
        dropdownActiveHoveredBackground: ColorString,
      },
      background: {
        default: ColorString
        pageActiveAreaBackground: ColorString,
        diffInserted: ColorString,
        diffDeleted: ColorString,
        usersListItem: ColorString,
      },
      grey: MuiColorShades,
      group: ColorString,
      contrastText: ColorString,
      individual: ColorString,
      event: ColorString,
      
      // headerType: Used by the Header component for figuring out the
      // color of the title in the top-bar, by indirect reference to another
      // palette entry. This is a weird hack that we probably want to replace
      // with something more straightforward.
      headerType: "primary"|"default",
      
      commentParentScrollerHover: ColorString,
      headerTextColor: ColorString,
      tocScrollbarColors: string,
    },
    typography: {
      fontFamily: string,
      fontDownloads: string[],
      
      postStyle: JssStyles,
      commentStyle: JssStyles,
      commentStyles: JssStyles,
      commentBlockquote: JssStyles,
      commentHeader: JssStyles,
      errorStyle: JssStyles,
      title: JssStyles,
      subtitle: JssStyles,
      li: JssStyles,
      display0: JssStyles,
      display1: JssStyles,
      display2: JssStyles,
      display3: JssStyles,
      display4: JssStyles,
      body1: JssStyles,
      body2: JssStyles,
      headline: JssStyles,
      subheading: JssStyles,
      headerStyle: JssStyles,
      code: JssStyles,
      codeblock: JssStyles,
      contentNotice: JssStyles,
      uiSecondary: JssStyles,
      smallFont: JssStyles,
      smallText: JssStyles,
      tinyText: JssStyles,
      caption: JssStyles,
      blockquote: JssStyles,
      uiStyle: JssStyles,
    },
    zIndexes: any,
    overrides: any,
    voting: {strongVoteDelay: number},
    secondary: any,
  };
  type ThemePalette = ThemeType["palette"];
}
